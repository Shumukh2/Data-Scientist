# simplilearn 
# Shumukh Alshareef 
# Analysis of Sales Report of a Clothes Manufacturing Outlet 

setwd("~/R/outlet data")
getwd()
#laod packeges
library(tidyverse)
library(dplyr)
library(caTools)
# Read in the data from (Excel)
library(readxl)
Attribute<- read_excel("Attribute DataSet.xlsx")
View(Attribute)

library(readxl)
Dresssales <- read_excel("Dress Sales.xlsx")
View(Dresssales) 


# Get familiar with our data : 
summary(Attribute)
str(Attribute)
dim(Attribute) 


#remove Dress_ID column
attribset1 = Attribute[2:14] 
Dresssale1 = Dresssales[2:24]

#cleaning data 
names(Dresssale1) <- c('29/8/2013' , '31/8/2013' , '2/9/2013' ,
                        '4/9/2013' , '6/9/2013' , '8/9/2013' , '10/9/2013' , 
                        '12/9/2013' , '14/9/2013' , '16/9/2013' , '18/9/2013', 
                        '20/9/2013' , '22/9/2013' , '24/9/2013' , '26/9/2013' ,
                        '28/9/2013' ,'30/9/2013' , '2/10/2013' , '4/10/2013' , 
                        '6/10/2013' , '8/10/2013' , '10/10/2013' , '12/10/2013')


#Manipulating values 
#Style 

attribset1$Style[attribset1$Style =='sexy'] <- 'Sexy' 
attribset1$Price[attribset1$Price =='high'] <- 'High'
attribset1$Price[attribset1$Price =='low'] <- 'Low'

#Size 

attribset1$Size[attribset1$Size =='s'] <- 'S'
attribset1$Size[attribset1$Size =='small'] <- 'S'


# Season

attribset1$Season[attribset1$Season =='Automn'] <- 'Autumn'
attribset1$Season[attribset1$Season =='spring'] <- 'Spring'
attribset1$Season[attribset1$Season =='summer'] <- 'Summer'
attribset1$Season[attribset1$Season =='winter'] <- 'Winter'

# NeckLine

attribset1$NeckLine[attribset1$NeckLine =='sweetheart'] <- 'Sweetheart'

#Sleevelength

attribset1$SleeveLength[attribset1$SleeveLength =='sleeevless'] <- 'sleevless'
attribset1$SleeveLength[attribset1$SleeveLength =='sleveless'] <- 'sleevless'
attribset1$SleeveLength[attribset1$SleeveLength =='sleeveless'] <- 'sleevless'
attribset1$SleeveLength[attribset1$SleeveLength =='threequater'] <- 'threequarter'
attribset1$SleeveLength[attribset1$SleeveLength =='thressqatar'] <- 'threequarter'
attribset1$SleeveLength[attribset1$SleeveLength =='urndowncollor'] <- 'turndowncollor'

# FabricType

attribset1$FabricType[attribset1$FabricType =='shiffon'] <- 'chiffon'
attribset1$FabricType[attribset1$FabricType =='sattin'] <- 'satin'
attribset1$FabricType[attribset1$FabricType =='wollen'] <- 'woolen'
attribset1$FabricType[attribset1$FabricType =='flannael'] <- 'flannel'
attribset1$FabricType[attribset1$FabricType =='knitting'] <- 'knitted'

# Decoration 

attribset1$Decoration[attribset1$Decoration =='none'] <- 'null'

# Pattern Type

attribset1$`Pattern Type`[attribset1$`Pattern Type` =='none'] <- 'null'
attribset1$`Pattern Type`[attribset1$`Pattern Type` =='leopard'] <- 'leapord'
 

#Factoring

attribset1$Style = factor(attribset1$Style, 
                          levels =  c( 'bohemian', 'Brief','Casual','cute', 'fashion', 'Flare','Novelty','OL','party', 'Sexy','vintage', 'work'),
                          labels =  c(0,1,2,3,4,5,6,7,8,9,10,11))

attribset1$Price = factor(attribset1$Price, 
                          levels =  c('Low','Medium', 'Average','High','very-high'),
                          labels =  c(0,1,2,3,4))

attribset1$Size = factor(attribset1$Size, 
                         levels =  c('free', 'L' ,'M','S' ,'XL'),
                         labels =  c(0,1,2,3,4))

attribset1$Season = factor(attribset1$Season, 
                           levels =  c('Autumn', 'Spring', 'Summer', 'Winter'),
                           labels =  c(0,1,2,3))


attribset1$NeckLine = factor(attribset1$NeckLine, 
                             levels =  c("o-neck","v-neck","boat-neck","peterpan-collor","ruffled","turndowncollor","slash-neck","mandarin-collor","open", "sqare-collor","Sweetheart", "Scoop","halter","backless","bowneck","NULL" ),
                             labels =  c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))


attribset1$SleeveLength = factor(attribset1$SleeveLength, 
                                 levels =  c("sleevless","Petal", "full","butterfly" ,"short","threequarter","halfsleeve","cap-sleeves","turndowncollor","capsleeves","half","NULL"  ),
                                 labels =  c(0,1,2,3,4,5,6,7,8,9,10,11))


attribset1$waiseline = factor(attribset1$waiseline, 
                              levels =  c("empire","natural","null","princess","dropped" ),
                              labels =  c(0,1,2,3,4))


attribset1$Material = factor(attribset1$Material, 
                             levels =  c("null","microfiber","polyster","silk","chiffonfabric","cotton","nylon","other","milksilk","linen","rayon","lycra","mix","acrylic","spandex","lace","modal","cashmere","viscos","knitting","sill","wool","model","shiffon" ),
                             labels =  c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23))

attribset1$FabricType = factor(attribset1$FabricType, 
                               levels =  c("chiffon","null","broadcloth","jersey","other","batik","satin","flannel","worsted","woolen","poplin","dobby","knitted","tulle","organza","lace","Corduroy","terry" ),
                               labels =  c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17))

attribset1$Decoration = factor(attribset1$Decoration, 
                               levels =  c("ruffles","null","embroidary","bow","lace","beading","sashes","hollowout","pockets","sequined" ,"applique","button","Tiered","rivet","feathers","flowers","pearls","pleat","crystal","ruched","draped","tassel","plain","cascading" ),
                               labels =  c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23))

attribset1$`Pattern Type` = factor(attribset1$`Pattern Type`, 
                                   levels =  c("animal","print","dot","solid","null","patchwork","striped","geometric","plaid","leopard","floral","character","splice","leapord","none" ),
                                   labels =  c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14))

#Missing Value with mode
colSums(is.na(attribset1))

attribset1$Price[is.na(attribset1$Price) ==TRUE] <- 2
attribset1$Season[is.na(attribset1$Season) ==TRUE] <- 2
attribset1$NeckLine[is.na(attribset1$NeckLine) ==TRUE] <- 0
attribset1$waiseline[is.na(attribset1$waiseline) ==TRUE] <- 1
attribset1$Material[is.na(attribset1$Material) ==TRUE] <- 5
attribset1$FabricType[is.na(attribset1$FabricType) ==TRUE] <- 1
attribset1$Decoration[is.na(attribset1$Decoration) ==TRUE] <- 1
attribset1$`Pattern Type`[is.na(attribset1$`Pattern Type`) ==TRUE] <- 3
attribset1$SleeveLength[is.na(attribset1$SleeveLength) ==TRUE] <- 0

#Dress Sales Dataset 

Dresssale1[8:13] <- data.frame(sapply(Dresssale1[8:13], function(x) as.numeric(as.character(x))))


# mean row 
Dresssale1 = as.matrix(Dresssale1)
k <- which(is.na(Dresssale1), arr.ind=TRUE)
Dresssale1[k] <- rowMeans(Dresssale1, na.rm=TRUE)[k[,1]]
Dresssale1 = as.data.frame(Dresssale1)


# sum all values on row on (total sales)
Dresssale1$totalsale = rowSums(Dresssale1)
head(Dresssale1)


mergedset <- data.frame(attribset1, Dresssale1)
view(mergedset)
str(mergedset)

# spliting dataset 
set.seed(100)

spl = sample.split(mergedset$Recommendation, SplitRatio = 0.7)
train = subset(mergedset, spl==TRUE)
test = subset(mergedset, spl==FALSE)

print(dim(train)); print(dim(test))

# Random Forest

library(randomForest)
randomForest_model = randomForest(x = train, y = train$Recommendation,ntree =800)# build model
confusionMatrix(train$Recommendation,predict(randomForest_model),positive = '1') # create confusion Matrix
print('---------------')
randomForest_predict = predict(randomForest_model,test) # predict test set
table(randomForest_predict,test$Recommendation )# create table


# regression the Style, Season, Material, Price on Total sales
regressorSales = lm(formula = totalsale ~ Style+Season+Material+Price, data = train) # build model
summary(regressorSales) # print model summary
plot(regressorSales, pch = 16, col = "blue") # Plot the results
abline(regressorSales) # Add regression line

# regression Rating on TotalSale 
regressorRating = lm(formula = totalsale ~ Rating, data = train) 
summary(regressorRating)
plot(regressorRating, pch = 16, col = "blue") 
abline(regressorRating)
